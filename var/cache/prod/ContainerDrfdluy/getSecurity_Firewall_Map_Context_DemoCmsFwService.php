<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.firewall.map.context.demo_cms_fw' shared service.

$a = ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->load('getSecurity_HttpUtilsService.php')) && false ?: '_'};
$b = ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()) && false ?: '_'};

$c = new \Symfony\Component\Security\Http\Firewall\LogoutListener($b, $a, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($a, 'demo_login'), array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => 'demo_logout'));
$c->addHandler(${($_ = isset($this->services['security.logout.handler.csrf_token_clearing']) ? $this->services['security.logout.handler.csrf_token_clearing'] : $this->load('getSecurity_Logout_Handler_CsrfTokenClearingService.php')) && false ?: '_'});

return $this->services['security.firewall.map.context.demo_cms_fw'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->load('getSecurity_ChannelListenerService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['security.context_listener.1']) ? $this->services['security.context_listener.1'] : $this->load('getSecurity_ContextListener_1Service.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['security.authentication.listener.form.demo_cms_fw']) ? $this->services['security.authentication.listener.form.demo_cms_fw'] : $this->load('getSecurity_Authentication_Listener_Form_DemoCmsFwService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['security.authentication.listener.anonymous.demo_cms_fw']) ? $this->services['security.authentication.listener.anonymous.demo_cms_fw'] : $this->load('getSecurity_Authentication_Listener_Anonymous_DemoCmsFwService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->load('getSecurity_AccessListenerService.php')) && false ?: '_'};
}, 5), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($b, ${($_ = isset($this->services['scheb_two_factor.security.authentication.trust_resolver']) ? $this->services['scheb_two_factor.security.authentication.trust_resolver'] : $this->getSchebTwoFactor_Security_Authentication_TrustResolverService()) && false ?: '_'}, $a, 'demo_cms_fw', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint(${($_ = isset($this->services['http_kernel']) ? $this->services['http_kernel'] : $this->getHttpKernelService()) && false ?: '_'}, $a, 'demo_login', false), NULL, NULL, ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->getMonolog_Logger_SecurityService()) && false ?: '_'}, false), $c, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('demo_cms_fw', 'security.user_checker', NULL, true, false, 'app.security.user_provider', 'demo_cms_fw', 'security.authentication.form_entry_point.demo_cms_fw', NULL, NULL, array(0 => 'form_login', 1 => 'anonymous'), NULL));
