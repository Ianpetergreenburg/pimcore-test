<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.authentication.listener.two_factor.admin' shared service.

return $this->services['security.authentication.listener.two_factor.admin'] = new \Scheb\TwoFactorBundle\Security\Http\Firewall\TwoFactorListener(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'}, ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->load('getSecurity_HttpUtilsService.php')) && false ?: '_'}, 'admin', ${($_ = isset($this->services['security.authentication.success_handler.two_factor.admin']) ? $this->services['security.authentication.success_handler.two_factor.admin'] : $this->load('getSecurity_Authentication_SuccessHandler_TwoFactor_AdminService.php')) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.failure_handler.two_factor.admin']) ? $this->services['security.authentication.failure_handler.two_factor.admin'] : $this->load('getSecurity_Authentication_FailureHandler_TwoFactor_AdminService.php')) && false ?: '_'}, array('auth_form_path' => '/admin/login/2fa', 'check_path' => '/admin/login/2fa-verify', 'default_target_path' => '/admin', 'always_use_default_target_path' => false, 'auth_code_parameter_name' => '_auth_code', 'trusted_parameter_name' => '_trusted', 'multi_factor' => false), ${($_ = isset($this->services['scheb_two_factor.null_trusted_device_manager']) ? $this->services['scheb_two_factor.null_trusted_device_manager'] : $this->services['scheb_two_factor.null_trusted_device_manager'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\NullTrustedDeviceManager()) && false ?: '_'}, ${($_ = isset($this->services['security.access_map']) ? $this->services['security.access_map'] : $this->load('getSecurity_AccessMapService.php')) && false ?: '_'}, ${($_ = isset($this->services['security.access.decision_manager']) ? $this->services['security.access.decision_manager'] : $this->getSecurity_Access_DecisionManagerService()) && false ?: '_'}, ${($_ = isset($this->services['event_dispatcher']) ? $this->services['event_dispatcher'] : $this->getEventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->getMonolog_Logger_SecurityService()) && false ?: '_'});
